import { useState } from "react";
import { Link } from "react-router-dom";
import { FaDiceD6 } from "react-icons/fa";
import { useNavigate } from "react-router-dom";
import ParticleBackground from "./ParticleBackground";

const Logo = () => {
  return (
    <svg
      width="400"
      height="90"
      viewBox="0 0 348 80"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <rect
        width="8.74564"
        height="25.7308"
        rx="4.37282"
        transform="matrix(0.0183386 0.999832 -0.999862 0.016609 56.0537 41)"
        fill="#38BDF8"
      />
      <rect
        width="8.74564"
        height="25.7308"
        rx="4.37282"
        transform="matrix(0.0183386 0.999832 -0.999862 0.016609 33.0791 29)"
        fill="#38BDF8"
      />
      <rect
        width="8.74564"
        height="64.0692"
        rx="4.37282"
        transform="matrix(0.0183386 0.999832 -0.999862 0.016609 64.0605 14)"
        fill="#38BDF8"
      />
      <path
        d="M44.3231 70.0727C46.7378 70.0326 48.7312 71.9575 48.7755 74.3721V74.3721C48.8198 76.7868 46.8982 78.7767 44.4835 78.8169L21.074 79.2057C18.6593 79.2458 16.6659 77.3209 16.6216 74.9063V74.9063C16.5773 72.4916 18.4989 70.5017 20.9136 70.4615L44.3231 70.0727Z"
        fill="#38BDF8"
      />
      <rect
        width="8.74564"
        height="32.1554"
        rx="4.37282"
        transform="matrix(0.0183386 0.999832 -0.999862 0.016609 47.7734 0)"
        fill="#38BDF8"
      />
      <rect
        width="8.74564"
        height="63.7384"
        rx="4.37282"
        transform="matrix(0.0183386 0.999832 -0.999862 0.016609 64.6484 55)"
        fill="#38BDF8"
      />
      <path
        d="M85.442 37.884V63H78.588V37.884H85.442ZM82.038 28.04C83.05 28.04 83.924 28.2853 84.66 28.776C85.396 29.236 85.764 30.11 85.764 31.398C85.764 32.6553 85.396 33.5293 84.66 34.02C83.924 34.5107 83.05 34.756 82.038 34.756C80.9953 34.756 80.106 34.5107 79.37 34.02C78.6647 33.5293 78.312 32.6553 78.312 31.398C78.312 30.11 78.6647 29.236 79.37 28.776C80.106 28.2853 80.9953 28.04 82.038 28.04ZM105.806 37.424C107.339 37.424 108.719 37.7307 109.946 38.344C111.172 38.9573 112.215 39.8773 113.074 41.104H113.258L113.81 37.884H119.606V63.046C119.606 65.438 119.13 67.4467 118.18 69.072C117.26 70.6973 115.864 71.924 113.994 72.752C112.123 73.6107 109.808 74.04 107.048 74.04C105.269 74.04 103.613 73.9327 102.08 73.718C100.577 73.5033 99.105 73.12 97.6636 72.568V67.094C98.7063 67.5233 99.749 67.876 100.792 68.152C101.865 68.4587 102.954 68.6733 104.058 68.796C105.192 68.9493 106.327 69.026 107.462 69.026C109.24 69.026 110.559 68.5507 111.418 67.6C112.307 66.6493 112.752 65.2233 112.752 63.322V62.816C112.752 62.2947 112.767 61.758 112.798 61.206C112.859 60.654 112.905 60.1633 112.936 59.734H112.752C111.893 61.0527 110.866 62.0033 109.67 62.586C108.474 63.1687 107.124 63.46 105.622 63.46C102.647 63.46 100.316 62.3253 98.6296 60.056C96.9736 57.756 96.1456 54.5667 96.1456 50.488C96.1456 47.728 96.529 45.382 97.2956 43.45C98.0623 41.4873 99.1663 40 100.608 38.988C102.08 37.9453 103.812 37.424 105.806 37.424ZM107.968 42.99C106.894 42.99 105.99 43.2813 105.254 43.864C104.548 44.416 104.012 45.2593 103.644 46.394C103.306 47.498 103.138 48.8933 103.138 50.58C103.138 53.0947 103.536 54.9807 104.334 56.238C105.131 57.4647 106.373 58.078 108.06 58.078C108.949 58.078 109.716 57.9707 110.36 57.756C111.004 57.5107 111.525 57.1273 111.924 56.606C112.353 56.054 112.675 55.3487 112.89 54.49C113.104 53.6313 113.212 52.5887 113.212 51.362V50.534C113.212 48.7247 113.028 47.268 112.66 46.164C112.292 45.06 111.724 44.2627 110.958 43.772C110.191 43.2507 109.194 42.99 107.968 42.99ZM146.093 37.424C148.792 37.424 150.954 38.16 152.579 39.632C154.204 41.0733 155.017 43.404 155.017 46.624V63H148.163V48.326C148.163 46.5167 147.841 45.1673 147.197 44.278C146.553 43.358 145.526 42.898 144.115 42.898C142.03 42.898 140.604 43.6187 139.837 45.06C139.07 46.4707 138.687 48.51 138.687 51.178V63H131.833V37.884H137.077L137.997 41.104H138.365C138.917 40.2453 139.592 39.5553 140.389 39.034C141.186 38.482 142.076 38.0833 143.057 37.838C144.038 37.562 145.05 37.424 146.093 37.424ZM185.847 54.214C185.725 53.6927 185.541 52.926 185.295 51.914C185.081 50.8713 184.835 49.7673 184.559 48.602C184.283 47.406 184.023 46.3173 183.777 45.336C183.532 44.324 183.363 43.588 183.271 43.128H183.087C182.995 43.588 182.827 44.324 182.581 45.336C182.367 46.3173 182.121 47.406 181.845 48.602C181.569 49.7673 181.309 50.8713 181.063 51.914C180.818 52.9567 180.634 53.754 180.511 54.306L178.487 63H171.127L163.997 37.884H170.805L173.703 49.016C173.918 49.7827 174.102 50.7027 174.255 51.776C174.439 52.8493 174.608 53.892 174.761 54.904C174.915 55.8853 175.022 56.6673 175.083 57.25H175.267C175.298 56.8207 175.359 56.2533 175.451 55.548C175.543 54.812 175.651 54.0607 175.773 53.294C175.927 52.5273 176.049 51.8373 176.141 51.224C176.264 50.58 176.356 50.1507 176.417 49.936L179.499 37.884H187.043L189.987 49.936C190.11 50.3653 190.248 51.0553 190.401 52.006C190.585 52.9567 190.739 53.9227 190.861 54.904C191.015 55.8853 191.091 56.6673 191.091 57.25H191.275C191.337 56.7287 191.444 55.9773 191.597 54.996C191.751 53.984 191.919 52.926 192.103 51.822C192.318 50.718 192.533 49.7827 192.747 49.016L195.737 37.884H202.453L195.231 63H187.779L185.847 54.214ZM221.886 37.378C225.259 37.378 227.835 38.114 229.614 39.586C231.423 41.0273 232.328 43.2507 232.328 46.256V63H227.544L226.21 59.596H226.026C225.321 60.4853 224.585 61.2213 223.818 61.804C223.082 62.3867 222.223 62.8007 221.242 63.046C220.291 63.322 219.111 63.46 217.7 63.46C216.228 63.46 214.894 63.184 213.698 62.632C212.533 62.0493 211.613 61.1753 210.938 60.01C210.263 58.814 209.926 57.3113 209.926 55.502C209.926 52.834 210.861 50.8713 212.732 49.614C214.603 48.326 217.409 47.6207 221.15 47.498L225.52 47.36V46.256C225.52 44.9373 225.167 43.9713 224.462 43.358C223.787 42.7447 222.837 42.438 221.61 42.438C220.383 42.438 219.187 42.622 218.022 42.99C216.857 43.3273 215.691 43.7567 214.526 44.278L212.272 39.632C213.621 38.9267 215.109 38.3747 216.734 37.976C218.39 37.5773 220.107 37.378 221.886 37.378ZM222.852 51.454C220.644 51.5153 219.111 51.914 218.252 52.65C217.393 53.386 216.964 54.352 216.964 55.548C216.964 56.5907 217.271 57.342 217.884 57.802C218.497 58.2313 219.295 58.446 220.276 58.446C221.748 58.446 222.99 58.0167 224.002 57.158C225.014 56.2687 225.52 55.0267 225.52 53.432V51.362L222.852 51.454ZM250.384 63L240.816 37.884H247.992L252.822 52.19C253.006 52.742 253.159 53.3247 253.282 53.938C253.435 54.5513 253.542 55.1493 253.604 55.732C253.696 56.3147 253.757 56.8513 253.788 57.342H253.972C254.002 56.8207 254.064 56.2687 254.156 55.686C254.248 55.1033 254.355 54.5207 254.478 53.938C254.631 53.3247 254.8 52.742 254.984 52.19L259.814 37.884H266.99L257.422 63H250.384ZM286.003 37.424C288.334 37.424 290.327 37.8687 291.983 38.758C293.67 39.6473 294.973 40.9353 295.893 42.622C296.813 44.3087 297.273 46.3787 297.273 48.832V52.144H281.081C281.142 54.076 281.71 55.594 282.783 56.698C283.887 57.802 285.405 58.354 287.337 58.354C288.962 58.354 290.434 58.2007 291.753 57.894C293.072 57.5567 294.436 57.0507 295.847 56.376V61.666C294.62 62.2793 293.317 62.724 291.937 63C290.588 63.3067 288.947 63.46 287.015 63.46C284.5 63.46 282.277 63 280.345 62.08C278.413 61.1293 276.895 59.7033 275.791 57.802C274.687 55.9007 274.135 53.5087 274.135 50.626C274.135 47.682 274.626 45.244 275.607 43.312C276.619 41.3493 278.014 39.8773 279.793 38.896C281.572 37.9147 283.642 37.424 286.003 37.424ZM286.049 42.3C284.73 42.3 283.626 42.7293 282.737 43.588C281.878 44.4467 281.372 45.7807 281.219 47.59H290.833C290.833 46.578 290.649 45.6733 290.281 44.876C289.944 44.0787 289.422 43.45 288.717 42.99C288.012 42.53 287.122 42.3 286.049 42.3Z"
        fill="white"
      />
    </svg>
  );
};
function HomeScreen() {
  const navigate = useNavigate();
  const [room, setRoom] = useState("");
  const [username, setUsername] = useState("");

  const joinMeeting = () => {
    if (username.trim() === "" || room.trim() === "") {
      alert("Please enter valid username and room id");
      return;
    }
    navigate(`/call/${username}/${room}`);
  };

  const generateRoom = () => {
    const characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    let result = "";
    for (let i = 0; i < 7; i++) {
      if (i === 3) result += "-";
      else {
        result += characters.charAt(
          Math.floor(Math.random() * characters.length)
        );
      }
    }
    setRoom(result);
  };

  return (
    <>
      <div className="absolute left-[15%] top-[40%]">
        <Logo />
      </div>
      <div
        className="card  text-neutral-content w-[39%]  flex flex-col items-center justify-evenly  gap-7 backdrop-blur-sm border-[1.5px] border-gray-600 bg-opacity-60 absolute left-1/4 h-[350px] "
        style={{ position: "relative", zIndex: 1, padding: "20px" }}
      >
        <div className="username flex items-center w-full gap-4 py-4 ">
          <span className="text-white font-semibold w-[93px] ">Username</span>
          <input
            value={username}
            title="username"
            className="input input-bordered w-[310px] max-w-xs"
            placeholder=""
            onChange={(e) => setUsername(e.target.value)}
          />
        </div>
        <div className="meetingId flex items-center w-full gap-4">
          <span className="text-white font-semibold w-[150px] ">
            Meeting Id
          </span>
          <input
            value={room}
            title="room"
            type="text"
            className="input input-bordered w-[500px] max-w-xs"
            placeholder=""
            onChange={(e) => setRoom(e.target.value)}
          />
          <button onClick={generateRoom}>
            <FaDiceD6 className="text-2xl text-primary" />
          </button>
        </div>

        <button
          className="btn btn-primary font-bold mb-2"
          onClick={joinMeeting}
        >
          Join Meeting
        </button>
      </div>
    </>
  );
}

export default HomeScreen;
